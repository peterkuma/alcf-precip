#!/usr/bin/env bash
set -e -x

DATA=data
INPUT=input
PLOT=plot
LABELS="clear fog rain snow"
ALCF_OPTS="tres: 36 zres: 10 zlim: { 0 250 } output_sampling: 600 align_output: false"

subsets () {
	local out="$1"
	local frac_val="$2"
	local frac_test="$3"
	local wo="$4"
	mkdir -p "$out"/{train,val,test}
	rm -f "$out/train/"*.nc
	rm -f "$out/val/"*.nc
	rm -f "$out/test/"*.nc
	for x in $(cat "$INPUT/sources"); do
		local in="$(realpath "$DATA/samples")"
		if [ "$x" = "$wo" ]; then
			continue
		fi
		for label in clear rain snow fog; do
			glob="$in/$x/$label/lidar/*.nc"
			set -- $glob
			if [ -e "$1" ]; then
				parallel -t ln -s {} "$out/train/$x"_{/} ::: $glob
			fi
		done
	done
	ls "$out/train" | shuf > "$out/list"
	local n="$(wc -l "$out/list" | cut -d' ' -f1)"
	local n_val="$(echo "print(round($n*$frac_val))" | python3)"
	local n_test="$(echo "print(round($n*$frac_test))" | python3)"
	head -n "$n_val" "$out/list" > "$out/list_val"
	tail -n "$n_test" "$out/list" > "$out/list_test"
	parallel -t \
		mv "$out/train/"{} "$out/val/" \
		:::: "$out/list_val"
	parallel -t \
		mv "$out/train/"{} "$out/test/" \
		:::: "$out/list_test"
}

case "$1" in

all)
	./run weather
	./run alcf
	./run alcf_times
	./run prepare_samples
	./run label_samples
	./run subsets
	./run train
	./run train_wo
	./run test
	./run test_wo
	./run pred
	./run plot_roc
	./run precip_ann
	./run alcf_filter

weather)
	mkdir -p "$DATA/weather"
	parallel -t bin/weather_ps \
		"$INPUT"/weather/{}.tsv \
		"$DATA/weather/"{}.nc \
		:::: "$INPUT/sources"
	;;

alcf)
	parallel -t \
		mkdir -p "$DATA"/samples_pred/{} \
		:::: "$INPUT/sources"
	parallel -t \
		alcf auto lidar cl51 \
		"$INPUT"/samples/{} \
		"$DATA"/samples_pred/{} \
		$ALCF_OPTS \
		:::: "$INPUT/sources"
	;;

alcf_times)
	for label in $LABELS; do
		mkdir -p "$DATA/alcf_times/$label"
		for x in $(cat "$INPUT/sources"); do
			bin/alcf_times "$DATA/weather/$x.nc" "$label" \
				> "$DATA/alcf_times/$label/$x"
		done
	done
	;;

prepare_samples)
	for label in $LABELS; do
		for x in $(cat "$INPUT/sources"); do
			out="$DATA/samples/$x/$label/lidar"
			mkdir -p "$out"
			parallel -t -C ' ' \
				alcf lidar cl51 \
				"$INPUT/samples/$x" \
				"$out" \
				time: { {1} {2} } \
				$ALCF_OPTS \
				align_output: false \
				:::: "$DATA/alcf_times/$label/$x"
		done
	done
	;;

label_samples)
	for label in $LABELS; do
		for x in $(cat "$INPUT/sources"); do
			glob="$DATA/samples/$x/$label/lidar/"*.nc
			set -- $glob
			if [ -e "$1" ]; then
				parallel -t ds set label: "$label" {} {} \
					::: $glob
			fi
		done
	done
	;;

subsets)
	subsets "$DATA/subsets" 0.2 0.2
	for x in $(cat "$INPUT/sources"); do
		subsets "$DATA/subsets/wo/$x" 0.2 0 "$x"
	done
	for x in $(cat "$INPUT/sources"); do
		in="$(realpath "$DATA/samples")"
		out="$DATA/subsets/labeled/$x"
		rm -f "$out"/*.nc
		mkdir -p "$out"
		for label in clear fog rain snow; do
			glob="$in/$x/$label/lidar/"*.nc
			set -- $glob
			if [ -e "$1" ]; then
				ln -s $glob "$out/"
			fi
		done
	done
	;;

train)
	mkdir -p "$DATA/ann"
	mkdir -p "$DATA/ann_history"
	bin/ann train \
		"$DATA/subsets/train" \
		"$DATA/subsets/val" \
		"$DATA/ann/all.h5" \
		"$DATA/ann_history/all.nc" \
	;;

train_wo)
	mkdir -p "$DATA/ann/wo"
	mkdir -p "$DATA/ann_history/wo"
	parallel -t \
		bin/ann train \
		"$DATA"/subsets/wo/{}/train \
		"$DATA"/subsets/wo/{}/val \
		"$DATA"/ann/wo/{}.h5 \
		"$DATA"/ann_history/wo/{}.nc \
		:::: "$INPUT/sources"
	;;

test)
	mkdir -p "$DATA/results"
	bin/ann apply \
		"$DATA/ann/all.h5" \
		"$DATA/subsets/test" \
		"$DATA/results/test.nc"
	;;

test_wo)
	mkdir -p "$DATA/results/test_wo"
	parallel -t \
		bin/ann apply \
		"$DATA"/ann/wo/{}.h5 \
		"$DATA"/subsets/labeled/{} \
		"$DATA"/results/test_wo/{}.nc \
		:::: "$INPUT/sources"
	;;

pred)
	mkdir -p "$DATA/pred"
	parallel -t \
		bin/ann apply \
		"$DATA/ann/all.h5" \
		"$DATA"/samples_pred/{}/lidar \
		"$DATA"/pred/{}.nc \
		:::: "$INPUT/sources"
	;;

plot_roc)
	mkdir -p "$PLOT"
	bin/plot_roc "$DATA/results/test.nc" "$PLOT/roc.pdf"
	mkdir -p "$PLOT/roc_wo"
	parallel -t \
		'echo -n "{} "; bin/plot_roc '"$DATA"'/results/test_wo/{}.nc '"$PLOT"'/roc_wo/{}.pdf | head -n 1 | cut -d" " -f 5' \
		:::: "$INPUT/sources" > "$DATA/thresholds"
	;;

precip_ann)
	mkdir -p "$DATA/precip"
	parallel -t \
		'bin/precip_ann $(grep {} '"$DATA"'/thresholds | cut -d " " -f 2) '"$DATA"'/pred/{}.nc '"$DATA"'/precip/{}.nc' \
		:::: "$INPUT/sources"
	;;

alcf_filter)
	mkdir -p "$DATA/alcf_filter"
	parallel -t \
		bin/alcf_filter "$DATA"/precip/{}.nc "$DATA"/alcf_filter/{}.nc \
		:::: "$INPUT/sources"
	;;

*)
	echo "Invalid command \"$1\"" >&2
esac
