#!/usr/bin/env python3
'''Plot MRR-2 data.

Usage: plot_mrr2 INPUT OUTPUT

Arguments:

  INPUT   MRR-2 instrument file - the output of mrr2c (NetCDF)>
  OUTPUT  Output plot (PDF).
'''

import sys
import numpy as np
import ds_format as ds
import matplotlib as mpl
import matplotlib.dates as mdates
import matplotlib.pyplot as plt
import aquarius_time as aq

mpl.rc('font', family='Open Sans')
mpl.rc('axes', linewidth=0.3)
mpl.rc('lines', linewidth=1.2)
mpl.rc('xtick.major', width=0.3)
mpl.rc('ytick.major', width=0.3)
mpl.rc('legend', framealpha=1)
mpl.rc('legend', facecolor='#eeeeee')
mpl.rc('legend', edgecolor='none')
mpl.rc('legend', fancybox=False)
mpl.rc('legend', fontsize=8)

HIGH = [
	'2018-02-11',
	'2018-02-12',
	'2018-02-20',
	'2018-02-21',
	'2018-02-25',
]

MID = {
	'2018-02-17',
}

if __name__ == '__main__':
	if len(sys.argv) != 3:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	output = sys.argv[2]

	d = ds.read(input_)
	n, m = d['rain_rate'].shape
	height = d['height_resolution'][0]*np.arange(m)
	k = int(1000//d['height_resolution'][0])
	date = aq.to_iso(d['time'][n//2])[:10]
	time_dt = aq.to_datetime(d['time'])

	plt.figure(figsize=(10, 5))
	plt.subplot(2, 1, 1)
	plt.title(date)
	if date in HIGH:
		vmax = 20
	elif date in MID:
		vmax = 2
	else:
		vmax = 1
	plt.contourf(aq.to_datetime(d['time']), height/1000, d['rain_rate'].T,
		vmin=0, vmax=vmax, levels=20,
	)
	plt.gca().xaxis.set_major_locator(mdates.HourLocator(interval=3))
	plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%H:%M'))
	xticks = plt.gca().get_xticks()
	plt.ylabel('Height (km)')
	plt.subplot(2, 1, 2)
	x = np.mean(d['rain_rate'][:,:k], axis=1)
	plt.plot(time_dt, x, color='k', lw=0.4)
	plt.gca().set_xticks(xticks)
	#plt.gca().xaxis.set_major_locator(mdates.HourLocator(interval=3))
	plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%H:%M'))
	plt.xlabel('Time (UTC)')
	plt.xlim(time_dt[0], time_dt[-1])
	plt.ylim(0.001, vmax)
	plt.semilogy()
	plt.savefig(output, bbox_inches='tight', dpi=300)
