#!/usr/bin/env python3
'''Calculate precipitation periods from Lufft CHM 15k precipitation flag.

Usage: chm15k_flag INPUT OUTPUT

Arguments:

  INPUT   Input directory with CHM 15k instrument files (NetCDF).
  OUTPUT  Output file (NetCDF).
'''

import sys
import numpy as np
import ds_format as ds

if __name__ == '__main__':
	if len(sys.argv) != 3:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	output = sys.argv[2]

	dd = ds.readdir(input_, ['time', 'sci'], parallel=True, jd=True)
	#dd = dd[:1000]
	avail = []
	for d in dd:
		if 'time' in d:
			avail += [[d['time'][0], d['time'][-1]]]
	d = ds.merge(dd, 'time')

	mask = (d['sci'] == 1) | \
		(d['sci'] == 3) #| \
		#(d['sci'] == 4)

	minute = 1/(24*60)
	time = d['time'][mask]
	dt = np.diff(time)
	ii = np.where(dt > 5*minute)[0]
	if len(ii) > 0:
		precip = []
		i1 = 0
		for i in ii:
			precip += [[time[i1], time[i]]]
			i1 = i + 1
		precip += [[time[ii[-1]], time[-1]]]
	else:
		precip = [[time[0], time[-1]]]

	ds.write(output, {
		'precip': precip,
		'avail': avail,
		'.': {
			'precip': {
				'.dims': ['precip', 'bnds'],
				'long_name': 'precipitation time periods',
				'units': ds.drivers.netcdf.JD_UNITS,
				'calendar': ds.drivers.netcdf.JD_CALENDAR,
			},
			'avail': {
				'.dims': ['avail', 'bnds'],
				'long_name': 'available time periods',
				'units': ds.drivers.netcdf.JD_UNITS,
				'calendar': ds.drivers.netcdf.JD_CALENDAR,
			}
		}
	})
