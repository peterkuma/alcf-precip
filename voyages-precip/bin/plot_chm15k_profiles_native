#!/usr/bin/env python3
'''Plot Lufft CHM 15k profiles in given time periods.

Usage: plot_chm15k_profiles INPUT FILTER OUTPUT TITLE

Arguments:

  INPUT   Directory with the instrument files (NetCDF).
  FILTER  Filter file to apply (NetCDF). The file should have the same format as include_filter of alcf stats.
  OUTPUT  Output plot (PDF).
  TITLE   Plot title.
'''

import sys
import numpy as np
import matplotlib.pyplot as plt
import ds_format as ds
import matplotlib as mpl

CALIBRATION_COEFF = 0.34

mpl.rc('font', family='Open Sans')
mpl.rc('axes', linewidth=0.3)
mpl.rc('axes', grid=True)
mpl.rc('lines', linewidth=1.2)
mpl.rc('xtick.major', width=0.3)
mpl.rc('ytick.major', width=0.3)
mpl.rc('legend', framealpha=1)
mpl.rc('legend', facecolor='#eeeeee')
mpl.rc('legend', edgecolor='none')
mpl.rc('legend', fancybox=False)
mpl.rc('legend', fontsize=8)
mpl.rc('grid', color='k')
mpl.rc('grid', alpha=0.2)
mpl.rc('grid', lw=0.1)

if __name__ == '__main__':
	if len(sys.argv) != 5:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	filter_ = sys.argv[2]
	output = sys.argv[3]
	title = sys.argv[4]

	d_filter = ds.read(filter_)
	dd = ds.readdir(input_, ['time', 'range_hr', 'beta_raw_hr'],
		jd=True,
		parallel=True
	)

	xx = []
	range_ = None
	for t1, t2 in d_filter['time_bnds']:
		for d in dd:
			if not ('time' in d and 'range_hr' in d and 'beta_raw_hr' in d):
				continue
			range_ = d['range_hr']
			b = d['beta_raw_hr']*1e-11*CALIBRATION_COEFF
			mask = (d['time'] >= t1) & (d['time'] <= t2)
			if np.sum(mask) > 0:
				xx += [np.nanmean(b[mask,:], axis=0)]

	plt.figure(figsize=[5, 5])

	for x in xx:
		plt.plot(x*1e6, range_, color='#0084C8', lw=1)

	plt.gca().set_aspect('auto')
	plt.ylim(0, 1000)
	plt.xlim(0, 2000)
	plt.xlabel('Backscatter ($\\times$10$^{-6}$ m$^{-1}$ sr$^{-1}$)')
	plt.ylabel('Height (m)')
	plt.title(title)
	plt.savefig(output, bbox_inches='tight')
