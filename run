#!/usr/bin/env bash
set -e -x

run_alcf () {
	type_="$1"
	in="$2"
	out="$3"
	alcf lidar $type_ $in $out output_sampling: 3600 tres: 225 noise_removal_sampling: 225
}

case "$1" in
alcf)
	run_alcf chm15k input/samples/{} data/samples/{}/plain :::: input/sources/by_instrument/chm15k
	;;

weather)
	bin/weather_tan1802 input/weather/TAN1802.csv data/weather/TAN1802.nc
	parallel bin/weather_ps input/weather/{}.tsv data/weater/{}.nc :::: input/sources/by_platform/ps
	;;

prepare_data)
	for ship in $SHIPS; do
		for lidar in $(cat input/$ship/lidars); do
			parallel mkdir -p data/$ship/{}/$lidar/all :::: input/"$ship"/voyages
			parallel mkdir -p data/$ship/{}/$lidar/training/samples :::: input/"$ship"/voyages
			parallel mkdir -p data/$ship/{}/$lidar/validation/samples :::: input/"$ship"/voyages
			parallel mkdir -p data/$ship/{}/$lidar/predidation/samples :::: input/"$ship"/voyages
		done
		mkdir -p data/all data/{training,validation,prediction}/samples
	done
	;;

prepare_samples)
	for ship in $SHIPS; do
		for lidar in $(cat input/$ship/lidars); do
			parallel bin/prepare_samples data/$ship/{}/$lidar/plain data/$ship/{}/weather.nc data/$ship/{}/$lidar/all :::: input/$ship/voyages
		done
	done
	;;

prepare_training_validation_per_voyage)
	for ship in $SHIPS; do
		for voyage in $(cat input/$ship/voyages); do
			for lidar in $(cat input/$ship/lidars); do
				dir=data/$ship/$voyage/$lidar
				ls $dir/all/*T*.nc | shuf > $dir/all/files
				n=$(wc -l $dir/all/files | cut -d' ' -f1)
				nval=$(echo "print(round($n*0.2))" | python3)
				head -n $nval $dir/all/files > $dir/all/files_validation
				tail -n +$(($nval+1)) $dir/all/files > $dir/all/files_trainining
				rm $dir/training/samples/*T*.nc || true
				rm $dir/validation/samples/*T*.nc || true
				parallel ln -s ../../all/{/} $dir/training/samples/{/} :::: $dir/all/files_training
				parallel ln -s ../../all/{/} $dir/validation/samples/{/} :::: $dir/all/files_validation
			done
		done
	done
	;;

prepare_training_validation)
	rm data/all/*T*.nc || true
	for ship in $SHIPS; do
		for voyage in $(cat input/$ship/voyages); do
			for lidar in $(cat input/$ship/lidars); do
				parallel ln -s ../../{} data/all/${ship}_${voyage}_${lidar}_{/} ::: data/$ship/$voyage/$lidar/all/*T*.nc
			done
		done
	done
	dir=data
	ls $dir/all/*T*.nc | shuf > $dir/all/files
	n=$(wc -l $dir/all/files | cut -d' ' -f1)
	nval=$(echo "print(round($n*0.2))" | python3)
	head -n $nval $dir/all/files > $dir/all/files_validation
	tail -n +$(($nval+1)) $dir/all/files > $dir/all/files_trainining
	rm $dir/training/samples/*T*.nc || true
	rm $dir/valdation/samples/*T*.nc || true
	parallel ln -s ../../all/{/} $dir/training/samples/{/} :::: $dir/all/files_training
	parallel ln -s ../../all/{/} $dir/validation/samples/{/} :::: $dir/all/files_validation
	ds merge sample data/training/samples/*.nc data/training/all.nc
	ds merge sample data/validation/samples/*.nc data/validation/all.nc
	;;

train)
	bin/ann_simple train \
		data/training \
		data/validation \
		data/ann/simple.h5 \
		data/ann_history/simple.nc
	;;

apply)
	bin/ann_simple apply \
		data/ann/simple.h5 \
		data/validation \
		data/prediction
	;;

*)
	echo "Invalid command \"$1\"" >&2
esac
