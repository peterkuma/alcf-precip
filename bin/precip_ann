#!/usr/bin/env python3
'''Calculate precipitation periods from lidar ANN results.

Usage: precip_ann THRESHOLD INPUT OUTPUT

Arguments:

  THRESHOLD  Threshold for precipitation probability.
  INPUT      Input data - the output of ann apply (NetCDF).
  OUTPUT     Output file (NetCDF).
'''

import sys
import os
import numpy as np
import ds_format as ds
import aquarius_time as aq

if __name__ == '__main__':
	if len(sys.argv) != 4:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	threshold = float(sys.argv[1])
	input_ = sys.argv[2]
	output = sys.argv[3]

	d = ds.read(input_)

	p = d['pred'][:,1] + d['pred'][:,2]
	mask = p > threshold

	precip = d['time_bnds'][mask]
	avail = d['time_bnds']

	ds.write(output, {
		'precip': precip,
		'avail': avail,
		'.': {
			'precip': {
				'.dims': ['precip', 'bnds'],
				'long_name': 'precipitation time periods',
				'units': ds.drivers.netcdf.JD_UNITS,
				'calendar': ds.drivers.netcdf.JD_CALENDAR,
			},
			'avail': {
				'.dims': ['avail', 'bnds'],
				'long_name': 'available time periods',
				'units': ds.drivers.netcdf.JD_UNITS,
				'calendar': ds.drivers.netcdf.JD_CALENDAR,
			},
		}
	})
